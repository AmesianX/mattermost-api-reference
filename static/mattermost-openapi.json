{
    "swagger": "2.0",
    "info": {
        "description": "This is the Mattemost API reference.",
        "version": "3.0.0",
        "title": "Mattermost API Reference",
        "termsOfService": "https://about.mattermost.com/default-terms/",
        "contact": {
            "email": "feedback@mattermost.com"
        },
        "x-logo": {
            "url": "https://www.mattermost.org/wp-content/uploads/2016/03/logoHorizontal_WS.png",
            "backgroundColor": "#FFFFFF"
        }
    },
    "basePath": "/api/v3",
    "host": "your-mattermost-url.com",
    "tags": [
        {
            "name": "introduction",
            "description": "Mattermost offers a RESTful Web Service API for interacting with the server. This document acts as a reference for version 3 that API. For other documentation please see https://docs.mattermost.com."
        },
        {
            "name": "schema",
            "description": "All API access is through HTTP(S) requests at `your-mattermost-url.com/api/v3`. All request and response bodies are `application/json`."
        },
        {
            "name": "users",
            "description": "Anything related to the user data model"
        },
        {
            "name": "teams",
            "description": "Anything related to the team data model"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/create": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Abbreviated user object that is to be created",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "email",
                                "username",
                                "password"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "first_name": {
                                    "type": "string"
                                },
                                "last_name": {
                                    "type": "string"
                                },
                                "nickname": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "locale": {
                                    "type": "string"
                                },
                                "props": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User creation successful",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get your user object",
                "description": "Returns the user object for the currently logged in user.",
                "responses": {
                    "200": {
                        "description": "User object retrieval successful",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Login to a user account",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "login_id",
                                "password"
                            ],
                            "properties": {
                                "login_id": {
                                    "type": "string",
                                    "description": "Username, email, or AD/LDAP ID of a user"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "User's password"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "Multi-factor authentication token, if required by the user"
                                },
                                "device_id": {
                                    "type": "string",
                                    "description": "Mobile device ID, for Android or iOS"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfuly",
                        "headers": {
                            "token": {
                                "type": "string",
                                "description": "Access token to be included with future requests"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/profiles/{team_id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get a list of sanitized user objects by team ID",
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "path",
                        "description": "Team ID of the users to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profiles retreived successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            }
        },
        "/users/update": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Update a user object",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object to update with",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User creation successful",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/update_roles": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Update a user's roles",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "user_id",
                                "roles"
                            ],
                            "properties": {
                                "user_id": {
                                    "type": "string",
                                    "description": "ID of the user to update the roles of"
                                },
                                "team_id": {
                                    "type": "string",
                                    "description": "ID of the team the user is on"
                                },
                                "roles": {
                                    "type": "string",
                                    "description": "Space-delimited list of roles to give the user"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User roles updated successful",
                        "schema": {
                            "properties": {
                                "user_id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/update_active": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Update whether a user's account is active",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "user_id",
                                "active"
                            ],
                            "properties": {
                                "user_id": {
                                    "type": "string",
                                    "description": "ID of the user to set active/inactive"
                                },
                                "active": {
                                    "type": "boolean",
                                    "description": "Use `true` to set the user active, `false` for inactive"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User active status successfully updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/update_notify": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Update a user's notification properties",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User notification properties successfully updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/teams/create": {
            "post": {
                "tags": [
                    "teams"
                ],
                "summary": "Create a new team",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Abbreviated user object that is to be created",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "name",
                                "display_name",
                                "type"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Unique handler for a team, will be present in the team URL"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Non-unique UI name for the team"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "`'O'` for open, `'I'` for invite only"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team creation successful",
                        "schema": {
                            "$ref": "#/definitions/Team"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "create_at": {
                    "type": "integer"
                },
                "update_at": {
                    "type": "integer"
                },
                "delete_at": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "auth_data": {
                    "type": "string"
                },
                "auth_service": {
                    "type": "string"
                },
                "roles": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "notify_props": {
                    "type": "object"
                },
                "props": {
                    "type": "object"
                },
                "last_password_update": {
                    "type": "integer"
                },
                "last_picture_update": {
                    "type": "integer"
                },
                "failed_attempts": {
                    "type": "integer"
                },
                "mfa_active": {
                    "type": "boolean"
                },
                "mfa_secret": {
                    "type": "string"
                }
            }
        },
        "Team": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "create_at": {
                    "type": "integer"
                },
                "update_at": {
                    "type": "integer"
                },
                "delete_at": {
                    "type": "integer"
                },
                "display_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "allowed_domains": {
                    "type": "string"
                },
                "invite_id": {
                    "type": "string"
                },
                "allow_open_invite": {
                    "type": "boolean"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Mattermost",
        "url": "https://about.mattermost.com"
    }
}
